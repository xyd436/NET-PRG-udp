1. 运行环境要求
操作系统： Windows。
Python版本： python版本：Python 3.11.4 
2. 程序文件说明
udpserver.py： UDP服务器端程序，负责接收来自客户端的数据报文，模拟TCP连接的建立、数据交互和断开过程。
udpclient.py： UDP客户端程序，与服务器端配合，模拟TCP连接的建立、数据交互和断开过程。
3. 配置选项
服务器端配置：
服务器IP地址和端口号： 在 udpserver.py 中的 server_port 变量指定服务器监听的端口号。
客户端配置：
服务器IP地址和端口号： 在运行 udpclient.py 时，程序会提示用户输入服务器的IP地址和端口号。
4. 程序运行步骤
①启动服务器端程序：
在命令行中执行 python udpserver.py 启动UDP服务器端程序。
程序开始监听指定的端口，并等待客户端连接。
②启动客户端程序：
在命令行中执行 python udpclient.py 启动UDP客户端程序。
根据程序提示，输入服务器的IP地址和端口号。
③交互过程：
客户端与服务器端开始模拟TCP连接的建立过程，包括三次握手，数据交互（包括丢包模拟和超时重传），四次挥手等过程。
服务器端根据客户端发送的数据报文个数进行自动关闭连接。
④运行结果和汇总信息：
程序运行过程中，客户端和服务器端会输出交互的详细信息，包括每个数据包的序号、服务器端的响应时间、丢包率、最大RTT、最小RTT、平均RTT等统计信息。
最终，客户端和服务器端会展示连接断开的结果，并输出连接过程中的汇总信息。
5. 注意事项
确保客户端和服务器端运行在同一局域网内，或者在能够相互访问的网络环境中，以确保正常的UDP数据交互和连接建立。
在程序运行过程中，可能会受到网络条件的影响，如延迟、丢包等，这些因素可能会影响程序的运行效果和输出结果。